# supabase.secure.template.txt
# Nginx configuration for Supabase with a domain name (HTTPS via Certbot).
# This initial config listens on port 80. Certbot will modify it for HTTPS on port 443.

server {
    listen 80;
    # listen [::]:80; # Uncomment if IPv6 is configured and needed
    server_name {{SUBDOMAIN_ADDRESS}};

    # Set a large client_max_body_size, Nginx's limit should be >= Kong's.
    # Supabase .env has KONG_NGINX_PROXY_CLIENT_MAX_BODY_SIZE (default 100m for Kong < 3.x, 0 for Kong >= 3.x meaning no limit on Kong's side)
    # For Supabase Storage uploads, this should be generous.
    client_max_body_size 1G; # Adjust as needed

    # Location for Certbot ACME challenge.
    # The self_host.sh script should ensure this directory exists.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # === Patch for a bug in Supabase Studio routing ===
    # Specific redirect for /studio/project/default/
    # This must come BEFORE the more general /studio/ location.
    location = /studio/project/default/ {
        return 302 /studio/project/[ref]/editor?ref=default;
    }

    # Proxy to Supabase Studio (general UI access)
    # Kong listens on port 8000 and proxies to the Studio container.
    location ^~ /studio/ {
        proxy_pass http://127.0.0.1:8000/studio/; # Pass to Kong, which handles Studio
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Will be 'http' initially, 'https' after Certbot
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
        proxy_read_timeout 86400s; # Long timeout for Studio interactions
        proxy_send_timeout 86400s;
        # If Studio is served at /studio/ by Kong, and Studio itself redirects to '/',
        # this ensures the redirect stays within /studio/ context.
        proxy_redirect ~^http://[^/]+/(.*)$ /studio/$1;
    }

    # Proxy Supabase Studio's Next.js static assets
    location /_next/static/ {
        proxy_pass http://127.0.0.1:8000/_next/static/; # Pass to Kong
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Add caching headers for static assets if desired
        # expires 1y;
        # add_header Cache-Control "public";
    }

    # Proxy Supabase Studio's Monaco editor assets
    location /monaco-editor/ {
        proxy_pass http://127.0.0.1:8000/monaco-editor/; # Pass to Kong
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy Supabase Studio's internal API routes (if any are directly exposed or needed via Kong)
    # Or any other /api/ prefixed routes you want to route through Kong.
    location /api/ {
        proxy_pass http://127.0.0.1:8000/api/; # Pass to Kong
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
    }

    # Main location to proxy all other requests (Supabase APIs: REST, Auth, Realtime, Storage, Edge Functions) to Kong.
    # This will also catch Studio paths if not caught by more specific locations above.
    location / {
        proxy_pass http://127.0.0.1:8000; # Supabase Kong's default HTTP port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Will be 'http' initially, 'https' after Certbot
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # Essential for WebSockets (Supabase Realtime)
        proxy_set_header Connection "upgrade";
        proxy_buffering off; # Recommended for Supabase Realtime and streaming
        proxy_read_timeout 86400s; # Long timeout for persistent connections
        proxy_send_timeout 86400s;
    }

    # Common security headers.
    # Certbot will likely add/manage HSTS (Strict-Transport-Security) in the HTTPS block.
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # HSTS only effective over HTTPS
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Certbot will create a new server block for :443 (SSL) or modify this one.
    # Directives like ssl_certificate, ssl_certificate_key will be added by Certbot.
}
